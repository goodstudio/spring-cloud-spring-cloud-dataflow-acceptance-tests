
name: SCDF Acceptance Tests Common Workflow

# Controls when the workflow will run
on:
    workflow_call:
        secrets:
           CF_USERNAME:
             required: true
           CF_ENV_0_PASSWORD:
             required: true
           CF_ENV_1_PASSWORD:
             required: true
           CF_ENV_2_PASSWORD:
             required: true
           SQL_USERNAME:
             required: true
           SQL_PASSWORD:
             required: true
           SQL_HOST:
             required: true
           SQL_PORT:
             required: true
           KAFKA_USERNAME:
             required: true
           KAFKA_PASSWORD:
             required: true
           KAFKA_BROKER_ADDRESS:
             required: true

        inputs:
            environment:
                default: scdf_at
                type: string
            binder:
                required: true
                type: string
            cf_host:
                required: true
                type: string
            cf_index:
                required: true
                type: string
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    acceptance-tests:
        environment: ${{inputs.environment}}
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v3
              with:
                ref: 2.9.x
            - uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - uses: stCarolas/setup-maven@v4.3
              with:
                  maven-version: 3.8.2
            # Runs a single command using the runners shell
            - name: resolve cf-password
              env:
                PASSWORD_KEY: ${{ format('CF_ENV_{0}_PASSWORD', inputs.cf_index) }}
              run : echo "SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_PASSWORD=${{ secrets[env.PASSWORD_KEY] }}" >> $GITHUB_ENV
            - name: run the test script
              env:
                  # DEBUG: true
                  BINDER : ${{ inputs.binder }}
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE : ${{ inputs.binder }}
                  PASSWORD_KEY: ${{ format('CF_ENV_{0}_PASSWORD', inputs.cf_index) }}
                  #SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_PASSWORD: ${{ secrets[env.PASSWORD_KEY] }}
                  # Postgres SQL Properties
                  # SQL_DB_INDEX used as a suffix. Should be unique for each CF_HOST
                  SQL_DB_INDEX: ${{ inputs.cf_index }}
                  SQL_HOST: ${{ secrets.SQL_HOST }}
                  SQL_PORT: ${{ secrets.SQL_PORT }}
                  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
                  SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
                  DATAFLOW_TILE_KAFKA_BROKER_ADDRESS: ${{ secrets.KAFKA_BROKER_ADDRESS }}
                  DATAFLOW_TILE_KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
                  DATAFLOW_TILE_KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
                  DEPLOY_PAUSE_TIME : 20
                  CF_DIAL_TIMEOUT : 600
                  JAVA_BUILDPACK : java_buildpack_offline
                  PLATFORM : cloudfoundry
                  PLATFORM_FOLDER : cloudfoundry-tile
                  CERT_URI : "uaa.sys.${{ inputs.cf_host }}.cf-app.com"
                  TRUST_CERTS : "api.sys.${{ inputs.cf_host }}.cf-app.com"
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION : false
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_TASK_SERVICES : scdf-scheduler
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_URL : "https://api.sys.${{ inputs.cf_host }}.cf-app.com"
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN : "apps.${{ inputs.cf_host }}.cf-app.com"
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORG : p-dataflow
                  SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_USERNAME : ${{ secrets.CF_USERNAME }}
              run: |
                scripts/at-test-script.sh

